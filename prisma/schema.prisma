// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
}

model Member {
  id          Int       @id @default(autoincrement())
  name        String
  phoneNumber String
  number      Int
  birthDate   DateTime
  generation  Int
  team        String    // CHUNGDONG, JUNGBYUNG
  position    String    @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  entries     Entry[]
  goals       Goal[]
  assists     Goal[]    @relation("Assist")
  turnovers   Turnover[]
  ratings     Rating[]
  momAwards   Match[]   @relation("MOM")
}

model Match {
  id          Int       @id @default(autoincrement())
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  location    String
  quarters    Int       @default(6)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  entries     Entry[]
  goals       Goal[]
  turnovers   Turnover[]
  ratings     Rating[]
  mom         Member?   @relation("MOM", fields: [momId], references: [id])
  momId       Int?
}

model Entry {
  id          Int       @id @default(autoincrement())
  match       Match     @relation(fields: [matchId], references: [id])
  matchId     Int
  member      Member    @relation(fields: [memberId], references: [id])
  memberId    Int
  quarter     Int
  team        String    // CHUNGDONG, JUNGBYUNG
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([matchId, memberId, quarter])
}

model Goal {
  id          Int       @id @default(autoincrement())
  match       Match     @relation(fields: [matchId], references: [id])
  matchId     Int
  scorer      Member    @relation(fields: [scorerId], references: [id])
  scorerId    Int
  assist      Member?   @relation("Assist", fields: [assistId], references: [id])
  assistId    Int?
  quarter     Int
  team        String    // CHUNGDONG, JUNGBYUNG
  createdAt   DateTime  @default(now())
}

model Turnover {
  id          Int       @id @default(autoincrement())
  match       Match     @relation(fields: [matchId], references: [id])
  matchId     Int
  member      Member    @relation(fields: [memberId], references: [id])
  memberId    Int
  quarter     Int
  count       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([matchId, memberId, quarter])
}

model Rating {
  id          Int       @id @default(autoincrement())
  match       Match     @relation(fields: [matchId], references: [id])
  matchId     Int
  member      Member    @relation(fields: [memberId], references: [id])
  memberId    Int
  score       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([matchId, memberId])
}
